<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.razorfish.test</groupId>
    <name>Test</name>
    <artifactId>test-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <description>Test Parent POM</description>
    <packaging>pom</packaging>

	<properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</maven.build.timestamp.format>
		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<cobertura-maven-plugin-version>2.5.1</cobertura-maven-plugin-version>
		<maven-surefire-report-plugin-version>2.12.3</maven-surefire-report-plugin-version>
		<maven-surefire-plugin-version>2.12.3</maven-surefire-plugin-version>
		<maven-assembly-plugin-version>2.3</maven-assembly-plugin-version>
		<maven-failsafe-plugin-version>2.12.3</maven-failsafe-plugin-version>
		<maven-compiler-plugin-version>2.5.1</maven-compiler-plugin-version>
		<maven-release-plugin-version>2.4</maven-release-plugin-version>
		<maven-resources-plugin-version>2.6</maven-resources-plugin-version>
		<maven-dependency-plugin-version>2.5.1</maven-dependency-plugin-version>
		<maven-jar-plugin-version>2.4</maven-jar-plugin-version>
		<build-helper.plugin.version>1.7</build-helper.plugin.version>
		<felix.plugin.version>2.3.7</felix.plugin.version>
		<maven-scr.plugin.version>1.7.2</maven-scr.plugin.version>			
	</properties>

    <repositories>
    	<!-- Public Adobe repository - not browseable -->
         <repository>
             <id>adobe-public-releases</id>
             <name>Adobe Basel Public Repository</name>
             <url>http://repo.adobe.com/nexus/content/groups/public</url>
             <releases>
                 <enabled>true</enabled>
                 <updatePolicy>never</updatePolicy>
             </releases>
             <snapshots>
                 <enabled>false</enabled>
             </snapshots>
		</repository>
		<repository>
		        <id>com.springsource.repository.bundles.external</id>
		        <name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
		        <url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
		<repository>
		        <id>repository.apache.org.releases</id>
		        <name>Apache Releases Repository</name>
		        <url>https://repository.apache.org/content/groups/public/</url>
	            <releases>
	                 <enabled>true</enabled>
	                 <updatePolicy>never</updatePolicy>
	            </releases>
	            <snapshots>
	                 <enabled>true</enabled>
	            </snapshots>
		</repository>
     </repositories>

     <pluginRepositories>
         <pluginRepository>
             <id>adobe-public-releases</id>
             <name>Adobe Basel Public Repository</name>
             <url>http://repo.adobe.com/nexus/content/groups/public</url>
             <releases>
                 <enabled>true</enabled>
                 <updatePolicy>never</updatePolicy>
             </releases>
             <snapshots>
                 <enabled>false</enabled>
             </snapshots>
         </pluginRepository>
     </pluginRepositories>

	<build>
		<defaultGoal>install</defaultGoal>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>${felix.plugin.version}</version>
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin-version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin-version}</version>
					<configuration>
						<argLine>-XX:MaxPermSize=256m -Djava.awt.headless=true</argLine>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<configuration>
						<argLine>-Djava.awt.headless=true</argLine>
					</configuration>
					<version>${maven-failsafe-plugin-version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin-version}</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
						<maxmem>512M</maxmem>
						<!-- Change from false to true to avoid the need of MAVEN_OPTS, if 
							we don't need a performance test is ok -->
						<fork>true</fork>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.6</version>
					<dependencies>
						<dependency>
							<groupId>ant</groupId>
							<artifactId>ant-trax</artifactId>
							<version>1.6.5</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin-version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin-version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin-version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-scr-plugin</artifactId>
					<version>${maven-scr.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.slf4j</groupId>
							<artifactId>slf4j-simple</artifactId>
							<version>${slf4j.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
			        <groupId>org.codehaus.mojo</groupId>
			        <artifactId>build-helper-maven-plugin</artifactId>
			        <version>${build-helper.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.sling</groupId>
					<artifactId>maven-sling-plugin</artifactId>
					<version>2.0.4-incubator</version>
					<extensions>true</extensions>
					<configuration>
						<usePut>true</usePut>
					</configuration>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.felix
										</groupId>
										<artifactId>
											maven-scr-plugin
										</artifactId>
										<versionRange>
											[1.7.2,)
										</versionRange>
										<goals>
											<goal>scr</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										 <execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
								<pluginExecutionFilter>
									<groupId>
										org.apache.maven.plugins
									</groupId>
									<artifactId>
										maven-dependency-plugin
									</artifactId>
									<versionRange>
										[2.2,)
									</versionRange>
									<goals>
										<goal>copy-dependencies</goal>
										<goal>unpack</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<execute />
								</action>
							</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>
												reserve-network-port
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.sling
										</groupId>
										<artifactId>
											maven-launchpad-plugin
										</artifactId>
										<versionRange>
											[2.0.10,)
										</versionRange>
										<goals>
											<goal>prepare-package</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.sling
										</groupId>
										<artifactId>
											maven-jcrocm-plugin
										</artifactId>
										<versionRange>
											[2.0.4-incubator,)
										</versionRange>
										<goals>
											<goal>ocm</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.2,)
										</versionRange>
										<goals>
											<goal>
												unpack-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<inherited>true</inherited>
				<configuration>
					<!-- Change from once to always to avoid the set of more -Xmx memory, 
						if we don't need a performance test is ok -->
					<forkMode>always</forkMode>
					<reportFormat>plain</reportFormat>
					<argLine>-XX:MaxPermSize=256m -Djava.awt.headless=true</argLine>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                	<argLine>-Djava.awt.headless=true</argLine>
                    <includes>
                        <include>**/*IntegrationTest.java</include>
                    </includes>
                    <argLine>-Djava.awt.headless=true</argLine>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura-maven-plugin-version}</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
				<!-- <executions> <execution> <phase>package</phase> <goals> <goal>cobertura</goal> 
					</goals> </execution> </executions> -->
			</plugin>
		</plugins>
	</build>

    <distributionManagement>
         <repository>
             <id>local-artifactory</id>
             <name>Local Repository</name>
             <url>file://${user.home}/.m2/artifacts</url>
        </repository>
    </distributionManagement>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire-report-plugin-version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura-maven-plugin-version}</version>
				<configuration>
					<excludes>
						<exclude>**/*Mock*.class</exclude>
						<exclude>**/*Test.class</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>package-deploy</id>
			<build>
				<pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.day.jcr.vault</groupId>
                            <artifactId>content-package-maven-plugin</artifactId>
                            <version>0.0.16</version>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>install</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
		</profile>

		<profile>
			<id>vault-sync</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<artifactId>maven-antrun-plugin</artifactId>
							<version>1.7</version>
							<executions>
								<execution>
									<phase>install</phase>
									<configuration>
										<target>
											<echo message="Syncronizing with local server via vault" />
											<exec command="vlt --credentials ${cq.user}:${cq.password} co --filter src/main/content/META-INF/vault/filter.xml http://${cq.host}:${cq.port}/crx src/main/content/jcr_root --force" />
										</target>
									</configuration>
									<goals>
										<goal>run</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>

</project>
